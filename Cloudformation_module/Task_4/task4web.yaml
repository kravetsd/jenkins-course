AWSTemplateFormatVersion: '2010-09-09'
Description: 'Task-4'
Parameters:
  DBUser:
    Default: Neily
    NoEcho: 'true'
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBPassword:
    Default: '9293709513'
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: must contain only alphanumeric characters.
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t1.micro, t2.nano, t2.micro, t2.small, t2.medium, t2.large, m1.small,
      m1.medium, m1.large, m1.xlarge, m2.xlarge, m2.2xlarge, m2.4xlarge, m3.medium,
      m3.large, m3.xlarge, m3.2xlarge, m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge,
      m4.10xlarge, c1.medium, c1.xlarge, c3.large, c3.xlarge, c3.2xlarge, c3.4xlarge,
      c3.8xlarge, c4.large, c4.xlarge, c4.2xlarge, c4.4xlarge, c4.8xlarge, g2.2xlarge,
      g2.8xlarge, r3.large, r3.xlarge, r3.2xlarge, r3.4xlarge, r3.8xlarge, i2.xlarge,
      i2.2xlarge, i2.4xlarge, i2.8xlarge, d2.xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge,
      hi1.4xlarge, hs1.8xlarge, cr1.8xlarge, cc2.8xlarge, cg1.4xlarge]
    ConstraintDescription: must be a valid EC2 instance type.
  KeyPair:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    Default: mp2019-KeyPair
  RDSUrl:
    Description: URL of RDS instance
    Type: String
    Default: nd1mkmo5t7qkyrb.cxb1c04gf2po.us-east-1.rds.amazonaws.com
  Subnet1:
    Description: Enter the Subnet1 ID
    Type: AWS::EC2::Subnet::Id
    Default: subnet-009d706b3d6bc7aed
  Subnet2:
    Description: Enter the Subnet2 ID
    Type: AWS::EC2::Subnet::Id
    Default: subnet-01d9922c9c25f21b9
  Admin:
    Description: Enter the ID of Admin Security Group
    Type: AWS::EC2::SecurityGroup::Id
    Default: sg-0e86371fab88bfbcd
  ELB:
    Description: Enter the ID of ELB Security Group
    Type: AWS::EC2::SecurityGroup::Id
    Default: sg-0d714116d0ff27412
  EC2:
    Description: Enter the ID of EC2 Security Group
    Type: AWS::EC2::SecurityGroup::Id
    Default: sg-030e726afffcb5900
  MaxInstances:
    Description: Maximum number of instances
    Type: String
    Default: 2
  MinInstances:
    Description: Minimum number of instances
    Type: String
    Default: 2
Mappings:
  RegionMap:
    us-east-1:
      HVM64: ami-0b898040803850657
    us-west-1:
      HVM64: ami-056ee704806822732
    us-west-2:
      HVM64: ami-082b5a644766e0e6f
Resources:
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !FindInMap
        - RegionMap
        - !Ref AWS::Region
        - HVM64
      KeyName: !Ref KeyPair
      SecurityGroups:
        - !Ref Admin
        - !Ref ELB
        - !Ref EC2
      InstanceType: !Ref InstanceType
      UserData:
        Fn::Base64:
          !Join [
            "",[
            "#!/bin/bash\n",
            "sudo yum update -y\n",
            "sudo yum install httpd php php-mysql -y\n",
            "sudo systemctl enable httpd\n",
            "sudo systemctl restart httpd\n",
            "cd /var/www/html\n",
            "file='/var/www/html/index.php'\n",
            "echo \"<?php\" > $file\n",
            "echo \"\\$link = mysql_connect('",
            {"Ref" : "RDSUrl"},
            "', 'Neily', '9293709513');\" >> $file\n",
            "echo \"if (!\\$link) {\" >> $file\n",
            "echo \"    die('Could not connect' . mysql_error());\" >> $file\n",
            "echo \"}\" >> $file\n",
            "echo \"echo 'Connected successfully';\" >> $file\n",
            "echo \"mysql_close(\\$link);\" >> $file\n",
            "echo \"?>\" >> $file\n"]]
  ElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Listeners:
      - LoadBalancerPort: '80'
        InstancePort: '80'
        Protocol: HTTP
      HealthCheck:
        Target: HTTP:80/index.php
        HealthyThreshold: '3'
        UnhealthyThreshold: '5'
        Interval: '30'
        Timeout: '5'
      Scheme: internet-facing
      SecurityGroups:
        - !Ref Admin
        - !Ref ELB
        - !Ref EC2
      Subnets:
        - !Ref Subnet1
        - !Ref Subnet2
  WebServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: NeilyASGGroup
      LaunchConfigurationName: !Ref LaunchConfig
      LoadBalancerNames: 
        - !Ref ElasticLoadBalancer
      MinSize: !Ref MinInstances
      MaxSize: !Ref MaxInstances
      HealthCheckType: ELB
      HealthCheckGracePeriod: '300'
      VPCZoneIdentifier:
        - !Ref Subnet1
        - !Ref Subnet2
Outputs:
  URL:
    Description: The URL of the website
    Value: !GetAtt ElasticLoadBalancer.DNSName